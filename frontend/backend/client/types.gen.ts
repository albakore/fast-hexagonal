// This file is auto-generated by @hey-api/openapi-ts

/**
 * AuthLoginRequest
 */
export type AuthLoginRequest = {
  /**
   * Nickname
   * nickname or email
   */
  nickname: string;
  /**
   * Password
   */
  password: string;
};

/**
 * AuthPasswordResetRequest
 */
export type AuthPasswordResetRequest = {
  /**
   * Id
   * User ID
   */
  id: string;
  /**
   * Initial Password
   * Initial password
   */
  initial_password: string;
  /**
   * New Password
   * New password account
   */
  new_password: string;
};

/**
 * AuthRegisterRequest
 */
export type AuthRegisterRequest = {
  /**
   * Email
   * Email
   */
  email: string;
  /**
   * Nickname
   * Nickname
   */
  nickname?: string | null;
  /**
   * Name
   * Name
   */
  name?: string | null;
  /**
   * Lastname
   * Lastname
   */
  lastname?: string | null;
  /**
   * Job Position
   * Job Position
   */
  job_position?: string | null;
  /**
   * Phone Number
   * Phone Number
   */
  phone_number?: string | null;
};

/**
 * CreateGroupRequest
 */
export type CreateGroupRequest = {
  /**
   * Name
   * Name of group
   */
  name: string;
  /**
   * Description
   * Description of group
   */
  description?: string | null;
};

/**
 * CreatePermissionRequest
 */
export type CreatePermissionRequest = {
  /**
   * Name
   * Name of permission
   */
  name: string;
  /**
   * Token
   * Unique token of permission
   */
  token: string;
  /**
   * Description
   * Description of permission
   */
  description?: string | null;
};

/**
 * CreateRoleRequest
 */
export type CreateRoleRequest = {
  /**
   * Name
   * Name of role
   */
  name: string;
  /**
   * Description
   * Description of role
   */
  description?: string | null;
};

/**
 * CreateUserRequest
 */
export type CreateUserRequest = {
  /**
   * Name
   */
  name?: string;
  /**
   * Lastname
   */
  lastname?: string;
  /**
   * Email
   */
  email?: string;
};

/**
 * GroupAddPermissionResponse
 */
export type GroupAddPermissionResponse = {
  /**
   * Id
   */
  id?: number | null;
  /**
   * Name
   */
  name: string;
  /**
   * Permissions
   */
  permissions?: Array<Permission> | null;
};

/**
 * GroupPermission
 */
export type GroupPermission = {
  /**
   * Id
   */
  id?: number | null;
  /**
   * Name
   */
  name: string;
  /**
   * Description
   */
  description?: string | null;
};

/**
 * GroupResponse
 */
export type GroupResponse = {
  /**
   * Id
   */
  id?: number | null;
  /**
   * Name
   */
  name?: string | null;
  /**
   * Description
   */
  description?: string | null;
  /**
   * Permissions
   */
  permissions?: Array<Permission> | null;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
  /**
   * Detail
   */
  detail?: Array<ValidationError>;
};

/**
 * Module
 */
export type Module = {
  /**
   * Id
   */
  id?: number | null;
  /**
   * Name
   */
  name: string;
  /**
   * Token
   */
  token: string;
  /**
   * Description
   */
  description?: string | null;
};

/**
 * Permission
 */
export type Permission = {
  /**
   * Id
   */
  id?: number | null;
  /**
   * Group Name
   */
  group_name?: string | null;
  /**
   * Name
   */
  name: string;
  /**
   * Token
   */
  token: string;
  /**
   * Description
   */
  description?: string | null;
};

/**
 * RefreshTokenRequest
 */
export type RefreshTokenRequest = {
  /**
   * Refresh Token
   * Refresh token
   */
  refresh_token: string;
};

/**
 * RefreshTokenResponse
 */
export type RefreshTokenResponse = {
  user: UserLoginResponseDto;
  /**
   * Permissions
   */
  permissions: Array<string>;
  /**
   * Token
   * Token
   */
  token: string;
  /**
   * Refresh Token
   * Refresh token
   */
  refresh_token: string;
};

/**
 * RoleAddGroupsResponse
 */
export type RoleAddGroupsResponse = {
  /**
   * Id
   */
  id?: number | null;
  /**
   * Name
   */
  name: string;
  /**
   * Groups
   */
  groups?: Array<GroupPermission> | null;
};

/**
 * RoleAddModulesResponse
 */
export type RoleAddModulesResponse = {
  /**
   * Id
   */
  id?: number | null;
  /**
   * Name
   */
  name: string;
  /**
   * Modules
   */
  modules?: Array<Module> | null;
};

/**
 * RoleAddPermissionResponse
 */
export type RoleAddPermissionResponse = {
  /**
   * Id
   */
  id?: number | null;
  /**
   * Name
   */
  name: string;
  /**
   * Permissions
   */
  permissions?: Array<Permission> | null;
};

/**
 * RoleRequest
 */
export type RoleRequest = {
  /**
   * Id
   */
  id: number;
  /**
   * Name
   */
  name: string;
};

/**
 * RoleResponse
 */
export type RoleResponse = {
  /**
   * Id
   */
  id?: number | null;
  /**
   * Name
   */
  name?: string | null;
  /**
   * Description
   */
  description?: string | null;
  /**
   * Groups
   */
  groups?: Array<GroupPermission> | null;
  /**
   * Permissions
   */
  permissions?: Array<Permission> | null;
  /**
   * Modules
   */
  modules?: Array<Module> | null;
};

/**
 * UserLoginResponseDTO
 */
export type UserLoginResponseDto = {
  /**
   * Id
   */
  id: string;
  /**
   * Nickname
   */
  nickname?: string | null;
  /**
   * Email
   */
  email?: string | null;
  /**
   * Name
   */
  name?: string | null;
  /**
   * Lastname
   */
  lastname?: string | null;
  /**
   * Job Position
   */
  job_position?: string | null;
  /**
   * Fk Role
   */
  fk_role?: number | null;
};

/**
 * ValidationError
 */
export type ValidationError = {
  /**
   * Location
   */
  loc: Array<string | number>;
  /**
   * Message
   */
  msg: string;
  /**
   * Error Type
   */
  type: string;
};

/**
 * VerifyTokenRequest
 */
export type VerifyTokenRequest = {
  /**
   * Token
   * Token
   */
  token: string;
};

export type RefreshTokenAuthV1AuthRefreshPostData = {
  body: RefreshTokenRequest;
  path?: never;
  query?: never;
  url: "/auth/v1/auth/refresh";
};

export type RefreshTokenAuthV1AuthRefreshPostErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type RefreshTokenAuthV1AuthRefreshPostError =
  RefreshTokenAuthV1AuthRefreshPostErrors[keyof RefreshTokenAuthV1AuthRefreshPostErrors];

export type RefreshTokenAuthV1AuthRefreshPostResponses = {
  /**
   * Successful Response
   */
  200: RefreshTokenResponse;
};

export type RefreshTokenAuthV1AuthRefreshPostResponse =
  RefreshTokenAuthV1AuthRefreshPostResponses[keyof RefreshTokenAuthV1AuthRefreshPostResponses];

export type VerifyTokenAuthV1AuthVerifyPostData = {
  body: VerifyTokenRequest;
  path?: never;
  query?: never;
  url: "/auth/v1/auth/verify";
};

export type VerifyTokenAuthV1AuthVerifyPostErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type VerifyTokenAuthV1AuthVerifyPostError =
  VerifyTokenAuthV1AuthVerifyPostErrors[keyof VerifyTokenAuthV1AuthVerifyPostErrors];

export type VerifyTokenAuthV1AuthVerifyPostResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type LoginAuthV1AuthLoginPostData = {
  body: AuthLoginRequest;
  path?: never;
  query?: never;
  url: "/auth/v1/auth/login";
};

export type LoginAuthV1AuthLoginPostErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type LoginAuthV1AuthLoginPostError =
  LoginAuthV1AuthLoginPostErrors[keyof LoginAuthV1AuthLoginPostErrors];

export type LoginAuthV1AuthLoginPostResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type RegisterAuthV1AuthRegisterPostData = {
  body: AuthRegisterRequest;
  path?: never;
  query?: never;
  url: "/auth/v1/auth/register";
};

export type RegisterAuthV1AuthRegisterPostErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type RegisterAuthV1AuthRegisterPostError =
  RegisterAuthV1AuthRegisterPostErrors[keyof RegisterAuthV1AuthRegisterPostErrors];

export type RegisterAuthV1AuthRegisterPostResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type PasswordResetAuthV1AuthPasswordResetPostData = {
  body: AuthPasswordResetRequest;
  path?: never;
  query?: never;
  url: "/auth/v1/auth/password_reset";
};

export type PasswordResetAuthV1AuthPasswordResetPostErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type PasswordResetAuthV1AuthPasswordResetPostError =
  PasswordResetAuthV1AuthPasswordResetPostErrors[keyof PasswordResetAuthV1AuthPasswordResetPostErrors];

export type PasswordResetAuthV1AuthPasswordResetPostResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type GetAllRolesRbacV1RbacRoleGetData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/rbac/v1/rbac/role";
};

export type GetAllRolesRbacV1RbacRoleGetResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type CreateRoleRbacV1RbacRolePostData = {
  body: CreateRoleRequest;
  path?: never;
  query?: never;
  url: "/rbac/v1/rbac/role";
};

export type CreateRoleRbacV1RbacRolePostErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type CreateRoleRbacV1RbacRolePostError =
  CreateRoleRbacV1RbacRolePostErrors[keyof CreateRoleRbacV1RbacRolePostErrors];

export type CreateRoleRbacV1RbacRolePostResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type EditRoleRbacV1RbacRolePutData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/rbac/v1/rbac/role";
};

export type EditRoleRbacV1RbacRolePutResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type DeleteRoleRbacV1RbacRoleIdRoleDeleteData = {
  body?: never;
  path: {
    /**
     * Id Role
     */
    id_role: number;
  };
  query?: never;
  url: "/rbac/v1/rbac/role/{id_role}";
};

export type DeleteRoleRbacV1RbacRoleIdRoleDeleteErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type DeleteRoleRbacV1RbacRoleIdRoleDeleteError =
  DeleteRoleRbacV1RbacRoleIdRoleDeleteErrors[keyof DeleteRoleRbacV1RbacRoleIdRoleDeleteErrors];

export type DeleteRoleRbacV1RbacRoleIdRoleDeleteResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type GetRoleRbacV1RbacRoleIdRoleGetData = {
  body?: never;
  path: {
    /**
     * Id Role
     */
    id_role: number;
  };
  query?: never;
  url: "/rbac/v1/rbac/role/{id_role}";
};

export type GetRoleRbacV1RbacRoleIdRoleGetErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type GetRoleRbacV1RbacRoleIdRoleGetError =
  GetRoleRbacV1RbacRoleIdRoleGetErrors[keyof GetRoleRbacV1RbacRoleIdRoleGetErrors];

export type GetRoleRbacV1RbacRoleIdRoleGetResponses = {
  /**
   * Successful Response
   */
  200: RoleResponse;
};

export type GetRoleRbacV1RbacRoleIdRoleGetResponse =
  GetRoleRbacV1RbacRoleIdRoleGetResponses[keyof GetRoleRbacV1RbacRoleIdRoleGetResponses];

export type GetAllRolePermissionsRbacV1RbacRoleIdRolePermissionGetData = {
  body?: never;
  path: {
    /**
     * Id Role
     */
    id_role: number;
  };
  query?: never;
  url: "/rbac/v1/rbac/role/{id_role}/permission";
};

export type GetAllRolePermissionsRbacV1RbacRoleIdRolePermissionGetErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type GetAllRolePermissionsRbacV1RbacRoleIdRolePermissionGetError =
  GetAllRolePermissionsRbacV1RbacRoleIdRolePermissionGetErrors[keyof GetAllRolePermissionsRbacV1RbacRoleIdRolePermissionGetErrors];

export type GetAllRolePermissionsRbacV1RbacRoleIdRolePermissionGetResponses = {
  /**
   * Response Get All Role Permissions Rbac V1 Rbac Role  Id Role  Permission Get
   * Successful Response
   */
  200: Array<Permission>;
};

export type GetAllRolePermissionsRbacV1RbacRoleIdRolePermissionGetResponse =
  GetAllRolePermissionsRbacV1RbacRoleIdRolePermissionGetResponses[keyof GetAllRolePermissionsRbacV1RbacRoleIdRolePermissionGetResponses];

export type AddPermissionsToRoleRbacV1RbacRoleIdRoleAddPermissionPutData = {
  /**
   * Permissions
   */
  body: Array<Permission>;
  path: {
    /**
     * Id Role
     */
    id_role: number;
  };
  query?: never;
  url: "/rbac/v1/rbac/role/{id_role}/add/permission";
};

export type AddPermissionsToRoleRbacV1RbacRoleIdRoleAddPermissionPutErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type AddPermissionsToRoleRbacV1RbacRoleIdRoleAddPermissionPutError =
  AddPermissionsToRoleRbacV1RbacRoleIdRoleAddPermissionPutErrors[keyof AddPermissionsToRoleRbacV1RbacRoleIdRoleAddPermissionPutErrors];

export type AddPermissionsToRoleRbacV1RbacRoleIdRoleAddPermissionPutResponses =
  {
    /**
     * Successful Response
     */
    200: RoleAddPermissionResponse;
  };

export type AddPermissionsToRoleRbacV1RbacRoleIdRoleAddPermissionPutResponse =
  AddPermissionsToRoleRbacV1RbacRoleIdRoleAddPermissionPutResponses[keyof AddPermissionsToRoleRbacV1RbacRoleIdRoleAddPermissionPutResponses];

export type AddGroupsToRoleRbacV1RbacRoleIdRoleAddGroupsPutData = {
  /**
   * Groups
   */
  body: Array<GroupPermission>;
  path: {
    /**
     * Id Role
     */
    id_role: number;
  };
  query?: never;
  url: "/rbac/v1/rbac/role/{id_role}/add/groups";
};

export type AddGroupsToRoleRbacV1RbacRoleIdRoleAddGroupsPutErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type AddGroupsToRoleRbacV1RbacRoleIdRoleAddGroupsPutError =
  AddGroupsToRoleRbacV1RbacRoleIdRoleAddGroupsPutErrors[keyof AddGroupsToRoleRbacV1RbacRoleIdRoleAddGroupsPutErrors];

export type AddGroupsToRoleRbacV1RbacRoleIdRoleAddGroupsPutResponses = {
  /**
   * Successful Response
   */
  200: RoleAddGroupsResponse;
};

export type AddGroupsToRoleRbacV1RbacRoleIdRoleAddGroupsPutResponse =
  AddGroupsToRoleRbacV1RbacRoleIdRoleAddGroupsPutResponses[keyof AddGroupsToRoleRbacV1RbacRoleIdRoleAddGroupsPutResponses];

export type AddModulesToRoleRbacV1RbacRoleIdRoleAddModulesPutData = {
  /**
   * Modules
   */
  body: Array<Module>;
  path: {
    /**
     * Id Role
     */
    id_role: number;
  };
  query?: never;
  url: "/rbac/v1/rbac/role/{id_role}/add/modules";
};

export type AddModulesToRoleRbacV1RbacRoleIdRoleAddModulesPutErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type AddModulesToRoleRbacV1RbacRoleIdRoleAddModulesPutError =
  AddModulesToRoleRbacV1RbacRoleIdRoleAddModulesPutErrors[keyof AddModulesToRoleRbacV1RbacRoleIdRoleAddModulesPutErrors];

export type AddModulesToRoleRbacV1RbacRoleIdRoleAddModulesPutResponses = {
  /**
   * Successful Response
   */
  200: RoleAddModulesResponse;
};

export type AddModulesToRoleRbacV1RbacRoleIdRoleAddModulesPutResponse =
  AddModulesToRoleRbacV1RbacRoleIdRoleAddModulesPutResponses[keyof AddModulesToRoleRbacV1RbacRoleIdRoleAddModulesPutResponses];

export type GetAllPermissionsRbacV1RbacPermissionGetData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/rbac/v1/rbac/permission";
};

export type GetAllPermissionsRbacV1RbacPermissionGetResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type CreatePermissionRbacV1RbacPermissionPostData = {
  body: CreatePermissionRequest;
  path?: never;
  query?: never;
  url: "/rbac/v1/rbac/permission";
};

export type CreatePermissionRbacV1RbacPermissionPostErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type CreatePermissionRbacV1RbacPermissionPostError =
  CreatePermissionRbacV1RbacPermissionPostErrors[keyof CreatePermissionRbacV1RbacPermissionPostErrors];

export type CreatePermissionRbacV1RbacPermissionPostResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type EditPermissionRbacV1RbacPermissionPutData = {
  body?: never;
  path?: never;
  query: {
    /**
     * Permission
     */
    permission: unknown;
  };
  url: "/rbac/v1/rbac/permission";
};

export type EditPermissionRbacV1RbacPermissionPutErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type EditPermissionRbacV1RbacPermissionPutError =
  EditPermissionRbacV1RbacPermissionPutErrors[keyof EditPermissionRbacV1RbacPermissionPutErrors];

export type EditPermissionRbacV1RbacPermissionPutResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type DeletePermissionRbacV1RbacPermissionIdPermissionDeleteData = {
  body?: never;
  path: {
    /**
     * Id Permission
     */
    id_permission: number;
  };
  query?: never;
  url: "/rbac/v1/rbac/permission/{id_permission}";
};

export type DeletePermissionRbacV1RbacPermissionIdPermissionDeleteErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type DeletePermissionRbacV1RbacPermissionIdPermissionDeleteError =
  DeletePermissionRbacV1RbacPermissionIdPermissionDeleteErrors[keyof DeletePermissionRbacV1RbacPermissionIdPermissionDeleteErrors];

export type DeletePermissionRbacV1RbacPermissionIdPermissionDeleteResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type GetPermissionRbacV1RbacPermissionIdPermissionGetData = {
  body?: never;
  path: {
    /**
     * Id Permission
     */
    id_permission: number;
  };
  query?: never;
  url: "/rbac/v1/rbac/permission/{id_permission}";
};

export type GetPermissionRbacV1RbacPermissionIdPermissionGetErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type GetPermissionRbacV1RbacPermissionIdPermissionGetError =
  GetPermissionRbacV1RbacPermissionIdPermissionGetErrors[keyof GetPermissionRbacV1RbacPermissionIdPermissionGetErrors];

export type GetPermissionRbacV1RbacPermissionIdPermissionGetResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type GetAllGroupsRbacV1RbacGroupGetData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/rbac/v1/rbac/group";
};

export type GetAllGroupsRbacV1RbacGroupGetResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type CreateGroupRbacV1RbacGroupPostData = {
  body: CreateGroupRequest;
  path?: never;
  query?: never;
  url: "/rbac/v1/rbac/group";
};

export type CreateGroupRbacV1RbacGroupPostErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type CreateGroupRbacV1RbacGroupPostError =
  CreateGroupRbacV1RbacGroupPostErrors[keyof CreateGroupRbacV1RbacGroupPostErrors];

export type CreateGroupRbacV1RbacGroupPostResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type GetGroupRbacV1RbacGroupIdGroupGetData = {
  body?: never;
  path: {
    /**
     * Id Group
     */
    id_group: number;
  };
  query?: never;
  url: "/rbac/v1/rbac/group/{id_group}";
};

export type GetGroupRbacV1RbacGroupIdGroupGetErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type GetGroupRbacV1RbacGroupIdGroupGetError =
  GetGroupRbacV1RbacGroupIdGroupGetErrors[keyof GetGroupRbacV1RbacGroupIdGroupGetErrors];

export type GetGroupRbacV1RbacGroupIdGroupGetResponses = {
  /**
   * Successful Response
   */
  200: GroupResponse;
};

export type GetGroupRbacV1RbacGroupIdGroupGetResponse =
  GetGroupRbacV1RbacGroupIdGroupGetResponses[keyof GetGroupRbacV1RbacGroupIdGroupGetResponses];

export type AddPermissionsToGroupRbacV1RbacGroupIdGroupAddPermissionPutData = {
  /**
   * Permissions
   */
  body: Array<Permission>;
  path: {
    /**
     * Id Group
     */
    id_group: number;
  };
  query?: never;
  url: "/rbac/v1/rbac/group/{id_group}/add/permission";
};

export type AddPermissionsToGroupRbacV1RbacGroupIdGroupAddPermissionPutErrors =
  {
    /**
     * Validation Error
     */
    422: HttpValidationError;
  };

export type AddPermissionsToGroupRbacV1RbacGroupIdGroupAddPermissionPutError =
  AddPermissionsToGroupRbacV1RbacGroupIdGroupAddPermissionPutErrors[keyof AddPermissionsToGroupRbacV1RbacGroupIdGroupAddPermissionPutErrors];

export type AddPermissionsToGroupRbacV1RbacGroupIdGroupAddPermissionPutResponses =
  {
    /**
     * Successful Response
     */
    200: GroupAddPermissionResponse;
  };

export type AddPermissionsToGroupRbacV1RbacGroupIdGroupAddPermissionPutResponse =
  AddPermissionsToGroupRbacV1RbacGroupIdGroupAddPermissionPutResponses[keyof AddPermissionsToGroupRbacV1RbacGroupIdGroupAddPermissionPutResponses];

export type GetUserListUsersV1UsersGetData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * Limit
     */
    limit?: number;
    /**
     * Page
     */
    page?: number;
  };
  url: "/users/v1/users";
};

export type GetUserListUsersV1UsersGetErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type GetUserListUsersV1UsersGetError =
  GetUserListUsersV1UsersGetErrors[keyof GetUserListUsersV1UsersGetErrors];

export type GetUserListUsersV1UsersGetResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type CreateUserUsersV1UsersPostData = {
  body: CreateUserRequest;
  path?: never;
  query?: never;
  url: "/users/v1/users";
};

export type CreateUserUsersV1UsersPostErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type CreateUserUsersV1UsersPostError =
  CreateUserUsersV1UsersPostErrors[keyof CreateUserUsersV1UsersPostErrors];

export type CreateUserUsersV1UsersPostResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type GetUserUsersV1UsersUserIdGetData = {
  body?: never;
  path?: never;
  query: {
    /**
     * User Uuid
     */
    user_uuid: string;
  };
  url: "/users/v1/users/{user_id}";
};

export type GetUserUsersV1UsersUserIdGetErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type GetUserUsersV1UsersUserIdGetError =
  GetUserUsersV1UsersUserIdGetErrors[keyof GetUserUsersV1UsersUserIdGetErrors];

export type GetUserUsersV1UsersUserIdGetResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type AsignRoleUsersV1UsersUserUuidRolePutData = {
  body: RoleRequest;
  path: {
    /**
     * User Uuid
     */
    user_uuid: string;
  };
  query?: never;
  url: "/users/v1/users/{user_uuid}/role";
};

export type AsignRoleUsersV1UsersUserUuidRolePutErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type AsignRoleUsersV1UsersUserUuidRolePutError =
  AsignRoleUsersV1UsersUserUuidRolePutErrors[keyof AsignRoleUsersV1UsersUserUuidRolePutErrors];

export type AsignRoleUsersV1UsersUserUuidRolePutResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type GetAllProvidersProvidersV1ProvidersGetData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * Limit
     */
    limit?: number;
    /**
     * Page
     */
    page?: number;
  };
  url: "/providers/v1/providers";
};

export type GetAllProvidersProvidersV1ProvidersGetErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type GetAllProvidersProvidersV1ProvidersGetError =
  GetAllProvidersProvidersV1ProvidersGetErrors[keyof GetAllProvidersProvidersV1ProvidersGetErrors];

export type GetAllProvidersProvidersV1ProvidersGetResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type GetSystemPermissionsPermissionsGetData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/permissions";
};

export type GetSystemPermissionsPermissionsGetResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type GetSystemModulesModulesGetData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/modules";
};

export type GetSystemModulesModulesGetResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type ClientOptions = {
  baseUrl:
    | `${string}://${string}/api`
    | "http://localhost:8000"
    | (string & {});
};
