services:
  db:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: hexa
      POSTGRES_PASSWORD: hexa
      POSTGRES_DB: hexa
      PGDATA: /data/postgres
    volumes:
      - db:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - db
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d hexa -U hexa" ]
      interval: 30s
      timeout: 10s
      retries: 5
  
  redis:
    container_name: redis
    image: redis:6.2-alpine
    restart: always
    env_file:
      - .env
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - redis:/data

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: docker/hexa/Dockerfile
    command: uv run hexa api --dev
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
    env_file:
      - .env
    volumes:
      - .:/app
      - .env:/app/.env
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - db
      - frontnet

  nginx:
    container_name: nginx
    build: ./docker/nginx
    restart: always
    environment: 
      - HEXA_SERVER_ADDR=backend:9091
    # command: /bin/bash -c "envsubst < /tmp/nginx.conf > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    ports:
      - 80:80
    networks:
      - frontnet
    volumes:
      - ./docker/nginx/nginx.conf:/tmp/nginx.conf

networks:
  frontnet:
    external: true
  db:
    driver: bridge

volumes:
  db:
  redis:
    driver: local