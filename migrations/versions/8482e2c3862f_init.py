"""init

Revision ID: 8482e2c3862f
Revises: 
Create Date: 2025-06-25 13:54:55.351326

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = '8482e2c3862f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('grouppermission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('token', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('grouppermissionlink',
    sa.Column('fk_group', sa.Integer(), nullable=False),
    sa.Column('fk_permission', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['fk_group'], ['grouppermission.id'], ),
    sa.ForeignKeyConstraint(['fk_permission'], ['permission.id'], ),
    sa.PrimaryKeyConstraint('fk_group', 'fk_permission')
    )
    op.create_table('rolegrouppermissionlink',
    sa.Column('fk_role', sa.Integer(), nullable=False),
    sa.Column('fk_group', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['fk_group'], ['grouppermission.id'], ),
    sa.ForeignKeyConstraint(['fk_role'], ['role.id'], ),
    sa.PrimaryKeyConstraint('fk_role', 'fk_group')
    )
    op.create_table('rolepermissionlink',
    sa.Column('fk_role', sa.Integer(), nullable=False),
    sa.Column('fk_permission', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['fk_permission'], ['permission.id'], ),
    sa.ForeignKeyConstraint(['fk_role'], ['role.id'], ),
    sa.PrimaryKeyConstraint('fk_role', 'fk_permission')
    )
    op.create_table('user',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('nickname', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('lastname', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('job_position', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('requires_password_reset', sa.Boolean(), nullable=False),
    sa.Column('initial_password', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('date_last_session', sa.DateTime(), nullable=False),
    sa.Column('date_registration', sa.DateTime(), nullable=False),
    sa.Column('fk_role', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['fk_role'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user')
    op.drop_table('rolepermissionlink')
    op.drop_table('rolegrouppermissionlink')
    op.drop_table('grouppermissionlink')
    op.drop_table('role')
    op.drop_table('permission')
    op.drop_table('grouppermission')
    # ### end Alembic commands ###
